#######################################################################################
#######################################################################################
# ooo        ooooo       .o.         .oooooo.   ooooooooo.     .oooooo.    .oooooo..o #
# `88.       .888'      .888.       d8P'  `Y8b  `888   `Y88.  d8P'  `Y8b  d8P'    `Y8 #
#  888b     d'888      .8"888.     888           888   .d88' 888      888 Y88bo.      #
#  8 Y88. .P  888     .8' `888.    888           888ooo88P'  888      888  `"Y8888o.  #
#  8  `888'   888    .88ooo8888.   888           888`88b.    888      888      `"Y88b #
#  8    Y     888   .8'     `888.  `88b    ooo   888  `88b.  `88b    d88' oo     .d8P #
# o8o        o888o o88o     o8888o  `Y8bood8P'  o888o  o888o  `Y8bood8P'  8""88888P'  #
#######################################################################################
#######################################################################################

[gcode_macro PRNT_STRT]

#PRNT_STRT_bed_temp: 0
variable_bed_temp: 0
variable_extruder_temp: 0
variable_default_bed_temp: 70
variable_default_extruder_temp: 220

gcode:
    {% set BED_TEMP = params.BED|default(0)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(190)|float %}
    G28 ; home all axis
	  {action_respond_info("PRNT_STRT MACRO LOADED")} 
  	 
	 #Get nozzl and bed temp from slicer gcode
    try:
        bed_temp = params.get('BED', 70)  # Default bed temperature is 70 if not provided
    except KeyError:
    # If bed temperature is not provided, use default
       set_bed_temp = default_variable_bed_tempt VALUE={BED_TEMP}

    try:
        extruder_temp = params.get('EXTRUDER', 190)  # Default extruder temperature is 190 if not provided
    except KeyError:
    # If extruder temperature is not provided, use default
         set_extruder_temp = variable_default_extruder_temp VALUE={extruder_TEMP}
		
	# Start preheating 
	M104 S{EXTRUDER_TEMP} ; set final nozzle temp
  M190 S{BED_TEMP} ; wait for bed temp to stabilize
  M109 S{EXTRUDER_TEMP} ; wait for nozzle temp to stabilize
	# store values just in case
	SET_GCODE_VARIABLE MACRO=PRNT_STRT VARIABLE=bed_temp VALUE={BED_TEMP}
  SET_GCODE_VARIABLE MACRO=PRNT_STRT VARIABLE=extruder_temp VALUE={EXTRUDER_TEMP}
	# wait until nozzl ND BED TEMP REACHED
	
	while TRUE
        if printer.extruder.temperature < EXTRUDER_TEMP %}
            while printer.extruder.temperature < EXTRUDER_TEMP:
                printer.extruder.wait_for_temperature(EXTRUDER_TEMP)
		if printer.extruder.temperature < BED_TEMP %}
             while printer.bed.temperature < BED_TEMP:
                 printer.bed.wait_for_temperature(BED_TEMP)		
		time.sleep(1) #wait 1 second befor rechecking		 
    
	  
  SAVE_GCODE_STATE NAME=PRIME_NOZZL_state
  G1 Z2.0 F300 ;Move Z Axis up
	G1 X10 Y5 Z0.1 F5000.0 ;Move to start position
	G1 X10 Y105.0 Z0.1 F1500.0 E15 ;Draw the first line
	G1 X12 Y105.0 Z0.1 F5000.0 ;Move to side a little
	G1 X12 Y5 Z0.1 F1500.0 E30 ;Draw the second line
	G92 E0 ;Reset Extruder
	G1 Z2.0 F300 ;Move Z Axis up
  RESTORE_GCODE_STATE NAME=PRIME_NOZZL_state MOVE=0
  {action_respond_info("STARTING PRINT")}

########################## Configuration GCODE Macros. #########################
#    BED_MESH_CLEAR
#	SET_VELOCITY_LIMIT ACCEL_TO_DECEL=1450
#	SET_VELOCITY_LIMIT ACCEL=2900
#	SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=5
  
 
[gcode_macro PRNT_STRT]
  gcode:
    G28
    {action_respond_info("PRNT_STRT MACRO LOADED")} 
    #SET_VELOCITY_LIMIT ACCEL_TO_DECEL=1450.000000
    #SET_VELOCITY_LIMIT ACCEL=2900.000000
    #SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=10
    G92 E0 ;Reset Extruder
    G1 Z2.0 F300 ;Move Z Axis up
    G1 X10 Y10 Z0.28 F5000.0 ;Move to start position
    G1 X10 Y110.0 Z0.28 F1500.0 E15 ;Draw the first line
    G1 X12 Y110.0 Z0.28 F5000.0 ;Move to side a little
    G1 X12 Y10 Z0.28 F1500.0 E30 ;Draw the second line
    G92 E0 ;Reset Extruder
    G1 Z2.0 F300 ;Move Z Axis up
    {action_respond_info("STARTING PRINT")}

 
[gcode_macro LOAD_MY_MESH]
gcode:
	BED_MESH_PROFILE LOAD=70c
	{action_respond_info("LOAD_MY_MESH MACRO LOADED")}

[gcode_macro PRNT_END]
gcode:
    {action_respond_info("PRNT_END MACRO LOADED")}
	G1 E-2 F2700 ;Retract a bit
	G1 Z277 F2300 ;bed goes down
	G1 X0 Y0 F2300 ;Wipe out
	M106 S0 ;Turn-off fan
	M104 S0 ;Turn-off hotend
	M140 S0 ;Turn-off bed
	G90 ;Absolute positionning
	M84 X Y Z E ;Disable all steppers
	BED_MESH_CLEAR

	
#Create bed mesh macro
[gcode_macro G29]
gcode =
	G0 Z5 F1200
	G28
	BED_MESH_CLEAR
	BED_MESH_CALIBRATE
	BED_MESH_PROFILE SAVE=NEW_BEDMESH
	SAVE_CONFIG
	FIRMWARE_RESTART


[gcode_macro Manual_Bed_Level]
gcode =
    BED_SCREWS_ADJUST


[gcode_macro ACCELEROMETER_CHECK]
gcode =
    ACCELEROMETER_QUERY


[gcode_macro ACCELEROMETER_BASELINE_NOISE]
gcode =
	MEASURE_AXES_NOISE


[gcode_macro Input_Shaper_auto_calibration]
gcode =
	SHAPER_CALIBRATE

[gcode_macro PressureAdvanced_Calibrition_settings]
gcode =
	SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
	TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.005

[gcode_macro E100MM_EXTRUDE]
gcode:
	G92 E0 ;Reset Extruder
	G1 E100 F300

[gcode_macro Filament_10MM_EXTRUDE]
gcode:
	G92 E0 ;Reset Extruder
	G1 E10 F300



[gcode_macro E100MM_RETRACT]
gcode:
	G92 E0 ;Reset Extruder
	G1 E-100 F300
	
[gcode_macro E10MM_RETRACT]
gcode:
	G92 E0 ;Reset Extruder
	G1 E-10 F300

	
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    _ADD_PRINT_TIME
    _SD_PRINT_STATS R='done'
    _SD_PRINTER_STATS

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(230) %}      #edit to your park position
    {% set y = params.Y|default(230) %}      #edit to your park position
    {% set z = params.Z|default(50)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{e} F2100
    G1 Z{z_safe}
    G90
    G1 X{x} Y{y} F6000


[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    G91
    G1 E{e} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME
	

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}



##################################
